# This is a basic workflow to help you get started with Actions

name: Convert ipynb files to html

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
        
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8']
        ci_node_total: [8]
        ci_node_index: [0,1,2,3,4,5,6,7]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v1
      - name: Upgrade packaging dependencies
        run: |
          pip install --upgrade pip setuptools wheel
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      #- name: Install the Python dependencies
      #  run: |
      #    pip install -e .[test]
        
      - name: Install nbconvert
        run: pip install nbconvert
        
      - name: Install jupyter
        run:  pip install jupyter
        
      - name: Convert all ipynb files to html (and delete ipynb files)
        run: find . -name '*.ipynb' -type f -execdir pip install -r requirements.txt \; -execdir jupyter nbconvert --template classic --to html --execute --EmbedImagesPreprocessor.embed_images=True {} \; -execdir rm {} \;

      - name: Push notebooks folder to the build branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          FOLDER: notebooks # The directory where your assets are generated
          BRANCH: build # The branch name where you want to push the assets
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
          SQUASH_HISTORY: true # If set to true, all previous commits on the target branch will be discarded. For example, if you are deploying a static site with lots of binary artifacts, this can help the repository becoming overly bloated.

